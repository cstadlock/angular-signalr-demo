{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/signalr.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  signalrHubUrl: 'https://mfcallahan-signalr-demo.azurewebsites.net/signalrdemohub'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { SignalrService } from './signalr.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  hubHelloMessage: string;\r\n  progressPercentage: number;\r\n  progressMessage: string;\r\n  processing: boolean;\r\n\r\n  constructor(public signalrService: SignalrService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.signalrService.connection\r\n      .invoke('Hello')\r\n      .catch(error => {\r\n        console.log(`SignalrDemoHub.Hello() error: ${error}`);\r\n        alert('SignalrDemoHub.Hello() error!, see console for details.');\r\n      }\r\n    );\r\n\r\n    this.signalrService.hubHelloMessage.subscribe((hubHelloMessage: string) => {\r\n      this.hubHelloMessage = hubHelloMessage;\r\n    });\r\n\r\n    this.signalrService.progressPercentage.subscribe((progressPercentage: number) => {\r\n      this.progressPercentage = progressPercentage;\r\n    });\r\n\r\n    this.signalrService.progressMessage.subscribe((progressMessage: string) => {\r\n      this.progressMessage = progressMessage;\r\n    });\r\n  }\r\n\r\n  public processData(): void {\r\n    this.processing = true;\r\n    this.progressPercentage = 0;\r\n    this.progressMessage = null;\r\n\r\n    this.signalrService.connection\r\n      .invoke('SimulateDataProcessing')\r\n      .then(() => {\r\n        this.processing = false;\r\n      })\r\n      .catch(error => {\r\n        console.log(`SignalrDemoHub.SimulateDataProcessing() error: ${error}`);\r\n        alert('SignalrDemoHub.SimulateDataProcessing() error!, see console for details.');\r\n      }\r\n    );\r\n  }\r\n}\r\n","<h2>SignalR Demo</h2>\r\n<p><b>hubHelloMessage:</b> {{ hubHelloMessage }}</p>\r\n<p>\r\n  <mat-progress-bar\r\n    style=\"width: 400px; height: 20px; display: inline-block\"\r\n    mode=\"determinate\"\r\n    [value]=\"progressPercentage\"\r\n  >\r\n  </mat-progress-bar>\r\n  <span style=\"margin-left: 20px\">{{ progressMessage }}</span>\r\n</p>\r\n<p>\r\n  <button [disabled]=\"processing\" (click)=\"processData()\">Process Data</button>\r\n</p>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { APP_INITIALIZER, NgModule } from '@angular/core';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { SignalrService } from './signalr.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    MatProgressBarModule,\r\n    NoopAnimationsModule\r\n  ],\r\n  providers: [\r\n    SignalrService,\r\n    {\r\n      provide: APP_INITIALIZER,\r\n      useFactory: (signalrService: SignalrService) => () => signalrService.initiateSignalrConnection(),\r\n      deps: [SignalrService],\r\n      multi: true,\r\n    }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport * as signalR from '@microsoft/signalr';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SignalrService {\r\n  connection: signalR.HubConnection;\r\n  hubHelloMessage: BehaviorSubject<string>;\r\n  progressPercentage: BehaviorSubject<number>;\r\n  progressMessage: BehaviorSubject<string>;\r\n\r\n  constructor() {\r\n    this.hubHelloMessage = new BehaviorSubject<string>(null);\r\n    this.progressPercentage = new BehaviorSubject<number>(null);\r\n    this.progressMessage = new BehaviorSubject<string>(null);\r\n  }\r\n\r\n  // Establish a connection to the SignalR server hub\r\n  public initiateSignalrConnection(): Promise<any>{\r\n    return new Promise((resolve, reject) => {\r\n      this.connection = new signalR.HubConnectionBuilder()\r\n        .withUrl(environment.signalrHubUrl) // the SignalR server url as set in the .NET Project properties and Startup class\r\n        .build();\r\n\r\n      this.setSignalrClientMethods();\r\n\r\n      this.connection\r\n        .start()\r\n        .then(() => {\r\n          console.log(`SignalR connection success! connectionId: ${this.connection.connectionId} `);\r\n          resolve();\r\n        })\r\n        .catch((error) => {\r\n          console.log(`SignalR connection error: ${error}`);\r\n          reject();\r\n        });\r\n    });\r\n  }\r\n\r\n  // This method will implement the methods defined in the ISignalrDemoHub inteface in the SignalrDemo.Server .NET solution\r\n  private setSignalrClientMethods(): void {\r\n    this.connection.on('DisplayMessage', (message: string) => {\r\n      this.hubHelloMessage.next(message);\r\n    });\r\n\r\n    this.connection.on('UpdateProgressBar', (percentage: number) => {\r\n      this.progressPercentage.next(percentage);\r\n    });\r\n\r\n    this.connection.on('DisplayProgressMessage', (message: string) => {\r\n      this.progressMessage.next(message);\r\n    });\r\n  }\r\n}\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}